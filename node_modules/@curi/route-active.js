'use strict';

function acceptableRouteName(name, response, partial) {
    return (name === response.name ||
        !!(partial && response.partials.some(function (n) { return name === n; })));
}
function checkIfActive() {
    var routeParams = {};
    return {
        name: "active",
        register: function (route, parentKeys) {
            var name = route.name, keys = route.keys;
            if (keys == null) {
                keys = [];
            }
            var fullKeys = Array.isArray(parentKeys)
                ? parentKeys.concat(keys) : keys;
            if (routeParams[name] !== undefined) {
                console.warn('[@curi/route-active] A route with the name "' +
                    name +
                    '" already exists. Each route should' +
                    "have a unique name. By registering a route function with a name that already exists, " +
                    "you are overwriting the existing one. This may break your application.");
            }
            routeParams[name] = fullKeys;
            return fullKeys;
        },
        get: function (name, response, params, partial) {
            if (routeParams[name] == null ||
                !acceptableRouteName(name, response, partial)) {
                return false;
            }
            var routeKeysToCheck = routeParams[name];
            for (var r = 0, length = routeKeysToCheck.length; r < length; r++) {
                var key = routeKeysToCheck[r];
                var param = params[key];
                if (!param || param !== response.params[key]) {
                    return false;
                }
            }
            return true;
        },
        reset: function () {
            routeParams = {};
        }
    };
}

module.exports = checkIfActive;
